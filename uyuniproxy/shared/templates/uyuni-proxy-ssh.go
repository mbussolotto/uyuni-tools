package templates

import (
	"io"
	"text/template"
)

const proxySSHTemplate = `# uyuni-proxy-ssh.service, generated by uyuniadm
# Use an uyuni-proxy-ssh.service.d/local.conf file to override

[Unit]
Description=Uyuni proxy ssh container service
Wants=network.target
After=network-online.target
BindsTo=uyuni-proxy-pod.service
After=uyuni-proxy-pod.service

[Service]
Environment=PODMAN_SYSTEMD_UNIT=%n
EnvironmentFile={{ .ProxySystemdConfigPath }}
EnvironmentFile={{ .ProxyConfigFolder}}
EnvironmentFile=-{{ .ProxySSHConfigPath}}
Restart=on-failure
ExecStartPre=/bin/rm -f %t/uyuni-proxy-ssh.pid %t/uyuni-proxy-ssh.ctr-id

Environment=UYUNI_IMAGE={{ .Image }}
ExecStart=/usr/bin/podman run \
    --conmon-pidfile %t/{{ .NamePrefix }}-proxy-ssh.pid \
    --cidfile %t/{{ .NamePrefix }}-proxy-ssh.ctr-id \
    --cgroups=no-conmon \
    --pod-id-file %t/{{ .NamePrefix }}-proxy-pod.pod-id -d \
    --replace -dt \
	  {{- range $name, $path := .Volumes }}
	  -v {{ $name }}:{{ $path }} \
	  {{- end }}
    --name {{ .NamePrefix }}-proxy-ssh ${UYUNI_IMAGE}

ExecStop=/usr/bin/podman stop --ignore --cidfile %t/{{ .NamePrefix }}-proxy-ssh.ctr-id -t 10
ExecStopPost=/usr/bin/podman rm --ignore -f --cidfile %t/{{ .NamePrefix }}-proxy-ssh.ctr-id
PIDFile=%t/{{ .NamePrefix }}-proxy-ssh.pid
TimeoutStopSec=60
Type=forking

[Install]
WantedBy=multi-user.target default.target
`

type PodmanProxySSHTemplateData struct {
	Volumes                map[string]string
	ProxySystemdConfigPath string
	ProxyConfigFolder      string
	ProxySSHConfigPath     string
	NamePrefix             string
}

func (data PodmanProxySSHTemplateData) Render(wr io.Writer) error {
	t := template.Must(template.New("service").Parse(proxySSHTemplate))
	return t.Execute(wr, data)
}

package templates

import (
	"io"
	"text/template"

	"github.com/uyuni-project/uyuni-tools/shared/utils"
)

const proxyPodTemplate = `# uyuni-proxy-pod.service, generated by uyuniadm

[Unit]
Description=Podman uyuni-proxy-pod.service
Wants=network.target
After=network-online.target
Requires=uyuni-proxy-httpd.service uyuni-proxy-salt-broker.service uyuni-proxy-squid.service uyuni-proxy-ssh.service uyuni-proxy-tftpd.service
Before=uyuni-proxy-httpd.service uyuni-proxy-salt-broker.service uyuni-proxy-squid.service uyuni-proxy-ssh.service uyuni-proxy-tftpd.service

[Service]
Environment=PODMAN_SYSTEMD_UNIT=%n
EnvironmentFile={{ .ProxySystemdConfigPath }}
EnvironmentFile={{ .ProxyConfigFolder}}
Restart=on-failure
ExecStartPre=/bin/rm -f %t/uyuni-proxy-pod.pid %t/uyuni-proxy-pod.pod-id

ExecStartPre=/usr/bin/podman pod create --infra-conmon-pidfile %t/{{ .NamePrefix }}-proxy-pod.pid \
		--pod-id-file %t/{{ .NamePrefix }}-proxy-pod.pod-id --name {{ .NamePrefix }}-proxy-pod \
	  {{- range .Ports }}
	  -p {{ .Exposed }}:{{ .Port }}{{if .Protocol}}/{{ .Protocol }}{{end}} \
	  {{- end }}
		--replace $EXTRA_POD_ARGS

ExecStart=/usr/bin/podman pod start --pod-id-file %t/{{ .NamePrefix }}-proxy-pod.pod-id
ExecStop=/usr/bin/podman pod stop --ignore --pod-id-file %t/{{ .NamePrefix }}-proxy-pod.pod-id -t 10
ExecStopPost=/usr/bin/podman pod rm --ignore -f --pod-id-file %t/{{ .NamePrefix }}-proxy-pod.pod-id

PIDFile=%t/{{ .NamePrefix }}-proxy-pod.pid
TimeoutStopSec=60
Type=forking

[Install]
WantedBy=multi-user.target default.target
`

type PodmanProxyPodTemplateData struct {
	Ports                  []utils.PortMap
	ProxySystemdConfigPath string
	ProxyConfigFolder      string
	NamePrefix             string
}

func (data PodmanProxyPodTemplateData) Render(wr io.Writer) error {
	t := template.Must(template.New("service").Parse(proxyPodTemplate))
	return t.Execute(wr, data)
}
